import React from "react";

interface RatingProps {
    rating: number;
    date: string;
}

const Star = ({
    filled,
    half,
    keyId,
}: {
    filled: boolean;
    half: boolean;
    keyId: number;
}) => {
    if (filled) {
        // Estrella completa
        return (
            <svg
                key={keyId}
                xmlns="http://www.w3.org/2000/svg"
                width="8"
                height="8"
                viewBox="0 0 8 8"
                fill="none"
            >
                <path
                    d="M3.99995 6.60983L1.87238 7.95913C1.80986 7.99155 1.75184 8.00468 1.69831 7.99853C1.64517 7.99196 1.5934 7.97267 1.54299 7.94066C1.49219 7.90784 1.4539 7.86146 1.42811 7.80155C1.40232 7.74163 1.39998 7.67618 1.42108 7.60519L1.98726 5.07525L0.114648 3.37017C0.0618984 3.32503 0.0271228 3.27106 0.010321 3.20828C-0.00648068 3.14549 -0.00276864 3.08537 0.0214571 3.02792C0.0456829 2.97047 0.0779187 2.92327 0.118165 2.88634C0.158801 2.85064 0.213505 2.82643 0.282275 2.8137L2.7533 2.58718L3.71686 0.191438C3.74343 0.123727 3.78172 0.0748925 3.83174 0.0449355C3.88175 0.0149785 3.93782 0 3.99995 0C4.06208 0 4.11834 0.0149785 4.16875 0.0449355C4.21915 0.0748925 4.25725 0.123727 4.28304 0.191438L5.2466 2.58718L7.71704 2.8137C7.7862 2.82602 7.8411 2.85043 7.88174 2.88695C7.92237 2.92307 7.9548 2.97005 7.97903 3.02792C8.00286 3.08537 8.00638 3.14549 7.98958 3.20828C7.97278 3.27106 7.938 3.32503 7.88525 3.37017L6.01264 5.07525L6.57882 7.60519C6.6007 7.67536 6.59855 7.74061 6.57237 7.80093C6.54619 7.86126 6.50771 7.90763 6.45691 7.94005C6.4069 7.97288 6.35512 7.99237 6.30159 7.99853C6.24845 8.00468 6.19062 7.99155 6.1281 7.95913L3.99995 6.60983Z"
                    fill="#860ABA"
                />
            </svg>
        );
    }
    if (half) {
        // Estrella media
        return (
            <svg
                key={keyId}
                xmlns="http://www.w3.org/2000/svg"
                width="8"
                height="8"
                viewBox="0 0 8 8"
                fill="none"
            >
                <path
                    d="M3.99995 1.08399V5.88533L5.84619 7.07027L5.36265 4.85427L6.9891 3.37694L4.84981 3.17688L3.99995 1.08399ZM3.99995 6.60983L1.87238 7.95913C1.80986 7.99155 1.75184 8.00468 1.69831 7.99853C1.64517 7.99196 1.5934 7.97267 1.54299 7.94066C1.49219 7.90784 1.4539 7.86146 1.42811 7.80155C1.40232 7.74163 1.39998 7.67618 1.42108 7.60519L1.98726 5.07525L0.114648 3.37017C0.0618984 3.32503 0.0271228 3.27106 0.010321 3.20828C-0.00648068 3.14549 -0.00276864 3.08537 0.0214571 3.02792C0.0456829 2.97047 0.0779187 2.92327 0.118165 2.88634C0.158801 2.85064 0.213505 2.82643 0.282275 2.8137L2.7533 2.58718L3.71686 0.191438C3.74343 0.123727 3.78172 0.0748925 3.83174 0.0449355C3.88175 0.0149785 3.93782 0 3.99995 0C4.06208 0 4.11834 0.0149785 4.16875 0.0449355C4.21915 0.0748925 4.25725 0.123727 4.28304 0.191438L5.2466 2.58718L7.71704 2.8137C7.7862 2.82602 7.8411 2.85043 7.88174 2.88695C7.92237 2.92307 7.9548 2.97005 7.97903 3.02792C8.00286 3.08537 8.00638 3.14549 7.98958 3.20828C7.97278 3.27106 7.938 3.32503 7.88525 3.37017L6.01264 5.07525L6.57882 7.60519C6.6007 7.67536 6.59855 7.74061 6.57237 7.80093C6.54619 7.86126 6.50771 7.90763 6.45691 7.94005C6.4069 7.97288 6.35512 7.99237 6.30159 7.99853C6.24845 8.00468 6.19062 7.99155 6.1281 7.95913L3.99995 6.60983Z"
                    fill="#860ABA"
                />
            </svg>
        );
    }
    // Estrella vac√≠a
    return (
        <svg
            key={keyId}
            xmlns="http://www.w3.org/2000/svg"
            width="8"
            height="8"
            viewBox="0 0 8 8"
            fill="none"
        >
            <path
                d="M2.15371 7.05488L3.99995 5.88533L5.84619 7.07027L5.36265 4.85427L6.9891 3.37694L4.84981 3.17688L3.99995 1.08399L3.1501 3.16149L1.01081 3.36155L2.63725 4.85427L2.15371 7.05488ZM3.99995 6.60983L1.87238 7.95913C1.80986 7.99155 1.75184 8.00468 1.69831 7.99853C1.64517 7.99196 1.5934 7.97267 1.54299 7.94066C1.49219 7.90784 1.4539 7.86146 1.42811 7.80155C1.40232 7.74163 1.39998 7.67618 1.42108 7.60519L1.98726 5.07525L0.114648 3.37017C0.0618984 3.32503 0.0271228 3.27106 0.010321 3.20828C-0.00648068 3.14549 -0.00276864 3.08537 0.0214571 3.02792C0.0456829 2.97047 0.0779187 2.92327 0.118165 2.88634C0.158801 2.85064 0.213505 2.82643 0.282275 2.8137L2.7533 2.58718L3.71686 0.191438C3.74343 0.123727 3.78172 0.0748925 3.83174 0.0449355C3.88175 0.0149785 3.93782 0 3.99995 0C4.06208 0 4.11834 0.0149785 4.16875 0.0449355C4.21915 0.0748925 4.25725 0.123727 4.28304 0.191438L5.2466 2.58718L7.71704 2.8137C7.7862 2.82602 7.8411 2.85043 7.88174 2.88695C7.92237 2.92307 7.9548 2.97005 7.97903 3.02792C8.00286 3.08537 8.00638 3.14549 7.98958 3.20828C7.97278 3.27106 7.938 3.32503 7.88525 3.37017L6.01264 5.07525L6.57882 7.60519C6.6007 7.67536 6.59855 7.74061 6.57237 7.80093C6.54619 7.86126 6.50771 7.90763 6.45691 7.94005C6.4069 7.97288 6.35512 7.99237 6.30159 7.99853C6.24845 8.00468 6.19062 7.99155 6.1281 7.95913L3.99995 6.60983Z"
                fill="#860ABA"
            />
        </svg>
    );
};

const formatDate = (dateStr: string) => {
    const date = new Date(dateStr);
    const day = date.getDate();
    const month = date.getMonth() + 1;
    const year = String(date.getFullYear()).slice(-2);
    return `${day}/${month}/${year}`;
};

const Rating: React.FC<RatingProps> = ({ rating, date }) => {
    return (
        <div className="flex items-center gap-2">
            <div className="flex gap-0.5">
                {[0, 1, 2, 3, 4].map(i => {
                    const filled = i + 1 <= rating;
                    const half = rating > i && rating < i + 1;
                    return (
                        <Star key={i} filled={filled} half={half} keyId={i} />
                    );
                })}
            </div>
            <span className="text-sm text-gray-400">{formatDate(date)}</span>
        </div>
    );
};

export default Rating;
